Wstêpna wersja przydzia³u zadañ na przysz³y sprint. Koñcowa wersja zostanie ustalona na spotkaniu 10.03.2016r.

Communication Utils
	1. Stworzenie generycznych interfejsów pozwalaj¹cych komponentom na komunikacjê po protokole TCP (10h) : Duszak, Augustyniak, Bondyra
	2. Stworzenie wiadomoœci wszystkich typów na podstawie schemy (3h) : B¹ka³a
	3. Skonstruowanie ogólnej klasy Message, bed¹c¹ klas¹ bazow¹ dla wszystkich wiadomoœci 
	o strukturze danej ze schemy. (3h) : B¹ka³a

Algorithm Solvers : Augustyniak
	1. Stworzenie szkieletowej implementacji TaskSolvera dla DVRP - na potrzeby etapu komunikacji 
	zastosowaæ zaœlepki w miejscu prawdziwej implementacji algorytmu. (3h)

Computational Client : Bondyra
	1. Skonstruowanie szkieletu klas dla projektu (4h)
	2. Poprawna komunikacja z serwerem bez uwzglêdnienia awaryjnoœci (3h)
	3. Poprawna komunikacja z serwerem z uwzglêdnieniem awaryjnoœci(3h)

Communication Server : B¹ka³a, Duszak
	1. Skonstruowanie szkieletu klas dla projektu (5h)
	2. Konfiguracja systemu przez parametry wywo³ania (3h)
	3. Implementacja sposobu komunikacji serwer - backupy (4h)
	4. Implementacja komunikacji serwer - klient (3h)
	5. Implementacja komunikacji z Task Managerami i wêz³ami obliczeniowymi (5h)
	6. Poprawne kolejkowanie wiadomoœci (3h)
	7. Uwzglêdnienie awaryjnoœci (6h)

Task Manager : Bondyra
	1. Skonstruowanie szkieletu klas dla projektu (4h)
	2. Komunikacja z serwerem (4h)
	3. Zastosowanie zaœlepek w kodzie (mocków) maj¹cych na celu imitacjê przysz³ego dzielenia problemu przez 
	komponent w celu przetestowania poprawnoœci implementacji komunikacji w systemie (4h) 
	4. Uwzglêdnienie awaryjnoœci (3h)

Computational Node : Augustyniak
	1. Skonstruowanie szkieletu klas dla projektu (4h)
	2. Komunikacja z serwerem (4h)
	3. Zastosowanie zaœlepek w kodzie (mocków) maj¹cych na celu imitacjê obliczeñ przez komponent w celu 
	przetestowania poprawnoœci implementacji komunikacji w systemie (4h) 
	4. Uwzglêdnienie awaryjnoœci (3h)

Inne : Bondyra
	1. Globalna konfiguracja systemu (3h)